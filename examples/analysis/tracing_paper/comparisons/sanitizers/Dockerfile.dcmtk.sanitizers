FROM ubuntu:focal
LABEL org.opencontainers.image.authors="kelly.kaoudis@trailofbits.com"
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /

# get core dump
# RUN ulimit -S -c unlimited

#ftp'd from https://support.dcmtk.org/redmine/projects/dcmtk/wiki/DICOM_Images
# NB: the build will fail if you don't have this zip but uncomment it :)
# COPY imgdisplay_testcases.zip "./imgdisplay_testcases.zip"

# We instrument with asan and ubsan following https://clang.llvm.org/docs/AddressSanitizer.html#usage (dynamic linking required, etc)

# dcmtk install instructions: https://support.dcmtk.org/docs/file_install.html

RUN apt-get update && \
    apt-get install -y \
      gettext \
      wget \
      unzip \
      git \
      cmake \
      clang-12 \
      python3-dev && \
    # dcmtk #
    wget https://support.dcmtk.org/redmine/attachments/download/184/dcmtk-3.6.7.tar.gz && \
    tar xvf dcmtk-3.6.7.tar.gz && \
    mv dcmtk-3.6.7 dcmtk && \
    # libpng #
    wget https://downloads.sourceforge.net/libpng/libpng-1.6.39.tar.xz && \
    tar xvf libpng-1.6.39.tar.xz && \
    mv libpng-1.6.39 dcmtk/libpng && \
    # zlib #
    wget https://zlib.net/fossils/zlib-1.3.tar.gz && \
    tar xvf zlib-1.3.tar.gz && \
    mv zlib-1.3 dcmtk/zlib && \
    # libjpeg (v9e) #
    wget https://ijg.org/files/jpegsrc.v9e.tar.gz && \
    tar xvf jpegsrc.v9e.tar.gz && \
    mv jpeg-9e dcmtk/libjpeg && \
    # libtiff #
    wget https://download.osgeo.org/libtiff/tiff-4.3.0.tar.gz && \
    tar xvf tiff-4.3.0.tar.gz && \
    mv tiff-4.3.0 dcmtk/libtiff

# Install symlinks to clang and llvm bitcode tools
RUN update-alternatives --install /usr/bin/opt opt /usr/bin/opt-12 10 && \
    update-alternatives --install /usr/bin/llvm-link llvm-link /usr/bin/llvm-link-12 10 && \
    update-alternatives --install /usr/bin/llvm-ar llvm-ar /usr/bin/llvm-ar-12 10 && \
    update-alternatives --install /usr/bin/llvm-symbolizer llvm-symbolizer /usr/bin/llvm-symbolizer-12 10 && \
    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 10 && \
    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-12 10 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3 10

ENV ASAN_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer

# build debug version of zlib
WORKDIR /dcmtk/zlib
RUN \
  CFLAGS="-O0 -g -fno-omit-frame-pointer" \
  CPPFLAGS="-O0 -g -fno-omit-frame-pointer" \
  CC=clang \
  CXX=clang++ \
  ./configure && \
  make -j$((`nproc`+1))

# build debug version of libjpeg
WORKDIR /dcmtk/libjpeg
RUN \
  AR_FLAGS="crs" \
  CFLAGS="-O0 -g -fno-omit-frame-pointer" \
  CC=clang \
  ./configure \
    --enable-shared \
    --disable-static \
    --prefix="/dcmtk/libjpeg" \
    --exec-prefix="/dcmtk/libjpeg" && \
    make -j$((`nproc`+1)) && \
    make install

# build debug version of libtiff
WORKDIR /dcmtk/libtiff
RUN \
  DIR_GZLIB="/dcmtk/zlib" \
  DIR_JPEGLIB="/dcmtk/libjpeg" \
  DIRS_LIBINC="/dcmtk/zlib /dcmtk/libjpeg" \
  CC=clang \
  CXX=clang++ \
  CPPFLAGS="-I/dcmtk/zlib -I/dcmtk/libjpeg/include"\
  CFLAGS="-O0 -g -fno-omit-frame-pointer" \
  CXXFLAGS="-O0 -g -fno-omit-frame-pointer" \
  LDFLAGS="-L/dcmtk/zlib -L/dcmtk/libjpeg/lib -lpthread" \
  ./configure \
    --enable-shared \
    --disable-static \
    --prefix="/dcmtk/libtiff" \
    --exec-prefix="/dcmtk/libtiff" && \
  make -j$((`nproc`+1)) && \
  make install

# build release version of libpng linking our built zlib
WORKDIR /dcmtk/libpng
RUN cp scripts/makefile.linux Makefile
RUN \
  CFLAGS="-O0 -g -fno-omit-frame-pointer" \
  CPPFLAGS="-I/imagemagick/zlib/include -O0 -g -fno-omit-frame-pointer" \
  LDFLAGS="-L/imagemagick/zlib" \
  CC=clang \
  make -j$((`nproc`+1))

# build debug version of dcmtk linking our built dependencies
WORKDIR /dcmtk/build
ENV DCMDICTPATH="/dcmtk/dcmdata/data/dicom.dic"
RUN cmake -S .. -B . \
  -DCMAKE_BUILD_TYPE:STRING=Debug \
  -DCMAKE_C_COMPILER=clang \
  -DCMAKE_CXX_COMPILER=clang++ \
  -DCMAKE_CXX_FLAGS="-fsanitize=address,undefined -fno-omit-frame-pointer -O0 -g" \
  -DCMAKE_C_FLAGS="-fsanitize=address,undefined -fno-omit-frame-pointer -O0 -g" \
  -DCMAKE_EXE_LINKER_FLAGS=" \
    -L/dcmtk/zlib \
    -L/dcmtk/libpng \
    -L/dcmtk/libjpeg/lib \
    -L/dcmtk/libtiff/lib \
    -lstdc++ \
    -fPIC \
    -lpthread" \
  -DBUILD_APPS:BOOL=ON \
  -DBUILD_SHARED_LIBS:BOOL=ON \
  -DDCMTK_LINK_STATIC:BOOL=OFF \
  -DDCMTK_DEFAULT_DICT:STRING=builtin \
  -DDCMTK_USE_DCMDICTPATH:BOOL=OFF \
  -DDCMTK_ENABLE_CHARSET_CONVERSION:STRING=oficonv \
  -DDCMTK_ENABLE_MANPAGES:BOOL=OFF \
  -DDCMTK_WITH_ICU:BOOL=OFF \
  -DDCMTK_WITH_STDLIBC_ICONV:BOOL=OFF \
  -DZLIB_INCLUDE_DIR="/dcmtk/zlib" \
  -DZLIB_LIBRARY_DEBUG="/dcmtk/zlib/libz.so" \
  -DDCMTK_WITH_PNG:BOOL=ON \
  -DPNG_LIBRARY_DEBUG="/dcmtk/libpng/libpng16.so" \
  -DPNG_PNG_INCLUDE_DIR="/dcmtk/libpng" \
  -DDCMTK_WITH_OPENJPEG:BOOL=ON \
  -DJPEG_INCLUDE_DIR="/dcmtk/libjpeg/include" \
  -DJPEG_LIBRARY_DEBUG="/dcmtk/libjpeg/lib/libjpeg.so" \
  -DOpenJPEG_DIR="/dcmtk/libjpeg" \
  -DDCMTK_WITH_TIFF:BOOL=ON \
  -DTIFF_INCLUDE_DIR="/dcmtk/libtiff/include" \
  -DTIFF_LIBRARY_DEBUG="/dcmtk/libtiff/lib/libtiff.so" && \
  cmake --build . -j$((`nproc`+1))
